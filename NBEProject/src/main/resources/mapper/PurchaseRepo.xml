<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.PurchaseRepo">
    <insert id="insert" parameterType="com.lec.spring.domain.Purchase"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into purchase (user_id, item_id, street_addr, detail_address, phone, request)
        value (#{userId}, #{purchaseItem}, #{streetAddr}, #{detailAddress}, #{phone}, #{request})
    </insert>

    <update id="update" flushCache="true">
        update purchase
        set street_addr=#{streetAddr},
            detail_address=#{detailAddress},
            phone=#{phone},
            request=#{request}
        where id=#{id}
    </update>
    <select id="selectById" resultType="com.lec.spring.domain.shop.Purchase">
            select * from purchase
            where user_id=#{param1}
            and item_id=#{param2};
    </select>
<!--    <resultMap id="goods" type="com.lec.spring.domain.shop.Goods">-->
<!--        <result property="goods_no" column="goods_no"/>-->
<!--        <result property="name" column="goods_name"/>-->
<!--        <result property="price" column="goods_price"/>-->
<!--        <result property="image_1" column="goods_image_1"/>-->
<!--    </resultMap>-->

<!--    <resultMap id="purItem" type="com.lec.spring.domain.shop.PurchaseItem">-->
<!--        <result property="id" column="iId"/>-->
<!--        <result property="amount" column="amount"/>-->
<!--        <collection property="goods" resultMap="goods"/>-->
<!--    </resultMap>-->

<!--    <resultMap id="purchase" type="com.lec.spring.domain.shop.Purchase">-->
<!--        <result property="id" column="id"/>-->
<!--        <result property="userId" column="uId"/>-->
<!--        <result property="regdate" column="reg"/>-->
<!--        <result property="streetAddress" column="sAddr"/>-->
<!--        <result property="detailAddress" column="dAddr"/>-->
<!--        <result property="phone" column="phoneNum"/>-->
<!--        <result property="request" column="req"/>-->
<!--        <collection property="purchaseItem" resultMap="purItem"/>-->
<!--    </resultMap>-->
<!--    <select id="selectById" resultMap="purchase">-->
<!--        select-->
<!--            p.id as "id",-->
<!--            p.user_id as "uId",-->
<!--            p.regdate as "reg",-->
<!--            p.street_addr as "sAddr",-->
<!--            p.detail_address as "dAddr",-->
<!--            p.phone as "phoneNum",-->
<!--            p.request as "req",-->
<!--            i.id as "iId",-->
<!--            i.amount as "amount",-->
<!--            g.goods_no as "goods_no",-->
<!--            g.name as "goods_name",-->
<!--            g.price as "goods_price",-->
<!--            g.image_1 as "goods_image_1"-->
<!--        from purchase p-->
<!--                 join purchase_item i on p.purchase_item_id = i.id-->
<!--                 join goods g on i.goods_id = g.goods_no-->
<!--        where p.id = #{param2}-->
<!--          and p.user_id = #{param1}-->
<!--    </select>-->



    <select id="cntOrder" resultType="Long">
        SELECT COUNT(*) FROM purchase
    </select>

    <select id="cntPurchaseItem" resultType="Long">
        SELECT COUNT(*) FROM purchase_item
    </select>

    <!--  유저 이름 검색 기능  -->
    <select id="username" flushCache="true" resultMap="PurchaseResultMap">
        SELECT p.id, p.user_id, p.item_id, p.regdate, p.street_addr, p.detail_address, p.phone, p.request,
               u.id as user_id, u.name AS username,
               pi.id as item_id, pi.goods_id, pi.amount,
               g.productId as goods_id, g.content AS goods_content
        FROM purchase p
                 LEFT JOIN user u ON p.user_id = u.id
                 LEFT JOIN purchase_item pi ON p.item_id = pi.id
                 LEFT JOIN goods g ON pi.goods_id = g.productId
        WHERE u.name LIKE CONCAT('%', #{username}, '%')
    </select>

    <select id="pagination" resultMap="PurchaseResultMap" parameterType="map">
        SELECT p.id, p.user_id, p.item_id, p.regdate, p.street_addr, p.detail_address, p.phone, p.request,
               u.id as user_id, u.name AS username,
               pi.id as item_id, pi.goods_id, pi.amount,
               g.productId as goods_id, g.content AS goods_content
        FROM purchase p
                 LEFT JOIN user u ON p.user_id = u.id
                 LEFT JOIN purchase_item pi ON p.item_id = pi.id
                 LEFT JOIN goods g ON pi.goods_id = g.productId
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!--  한승욱 코드  -->

    <resultMap id="PurchaseResultMap" type="com.lec.spring.domain.shop.Purchase">
        <id property="id" column="id"/>
        <result property="user_id" column="user_id"/>
        <result property="item_id" column="item_id"/>
        <result property="regdate" column="regdate"/>
        <result property="street_addr" column="street_addr"/>
        <result property="detail_address" column="detail_address"/>
        <result property="phone" column="phone"/>
        <result property="request" column="request"/>

        <association property="user" javaType="com.lec.spring.domain.shop.User">
            <id property="id" column="user_id"/>
            <result property="name" column="username"/>
        </association>

        <association property="purchaseItem" javaType="com.lec.spring.domain.shop.PurchaseItem">
            <id property="id" column="item_id"/>
            <result property="goods_id" column="goods_id"/>
            <result property="amount" column="amount"/>
        </association>

        <association property="goods" javaType="com.lec.spring.domain.shop.Goods">
            <id property="id" column="goods_id"/>
            <result property="content" column="goods_content"/>
        </association>
    </resultMap>

    <select id="listOrder" resultMap="PurchaseResultMap">
        SELECT p.id, p.user_id, p.item_id, p.regdate, p.street_addr, p.detail_address, p.phone, p.request,
               u.id as user_id, u.name AS username,
               pi.id as item_id, pi.goods_id, pi.amount,
               g.productId as goods_id, g.content AS goods_content
        FROM purchase p
                 LEFT JOIN user u ON p.user_id = u.id
                 LEFT JOIN purchase_item pi ON p.item_id = pi.id
                 LEFT JOIN goods g ON pi.goods_id = g.productId
    </select>
</mapper>